https://www.youtube.com/playlist?list=PLjHmWifVUNMKyW8SZUSQCoaYOROcWAKkt

* express - framework NodeJS - najpopularniejszy
* pug - Silnik szablonów (HTML), dawniej zwany jako JADE
* body-parser - moduł do obsługi danych requestów typu POST
* cookie-parser - moduł do obsługi ciasteczek
* connect-flash - moduł do przesyłania tymczasowych komunikatów Np. "Zostałeś zalogowany"

npm init
powstanie package.json
npm install express pug body-parser cookie-parser connect-flash --save

1) Knfiguracja
    * ustawienie aplikacji oraz serwera
        ** konfiguracja serwera to server.js
        ** konfiguracja aplikacji to app.js

    * obsługa scieżek (routes)
    * renderowanie widoków
    * Obsługa plków statycznych

Zainstaluj, pomoże to w przeładowaniu serwera node po zmianach w plikach projektu git: 
    npm install -g nodemon 

Git : (git commit -a -m "komunikat", git push -u origin master)

usuwam wszystko *.csv
git filter-branch --force --index-filter "git rm --cached --ignore-unmatch *.csv" --prune-empty --tag-name-filter cat -- --all
git push origin --force --all
git push origin --force --tags

2) kontrolery
    wykorzystamy moduł connect flash w celu wyswietlenia informacji zwrotnej
    instalujemy moduł obsługujacy sesję: npm install express-session --save
3) middelware
4) MySQL 
        Knex.js: query builder
        Bookshelf.js: klasyczny ORM
        npm install knex bookshelf mysql2 --save
==================================================================================================================
database: 
-- --------------------------------------------------------
-- Host:                         localhost
-- Wersja serwera:               10.1.40-MariaDB - mariadb.org binary distribution
-- Serwer OS:                    Win64
-- HeidiSQL Wersja:              10.2.0.5599
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- Zrzut struktury tabela overment.applications
CREATE TABLE IF NOT EXISTS `applications` (
  `id` int(11) NOT NULL,
  `name` varchar(255) DEFAULT '',
  `phone` varchar(255) DEFAULT '',
  `message` text,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Zrzucanie danych dla tabeli overment.applications: ~1 rows (około)
/*!40000 ALTER TABLE `applications` DISABLE KEYS */;
INSERT INTO `applications` (`id`, `name`, `phone`, `message`, `created_at`) VALUES
	(0, 'Piotr', '501 79 00 68', 'Mój komunikat', '2019-10-03 09:44:49');
/*!40000 ALTER TABLE `applications` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;

========================================================================================================================


        tworze katalog config i knexfile.js
        tworzę modele (models)